name: DevSecOps CI/CD Pipeline for OWASP Juice Shop

on:
  push:
    branches:
      - master

permissions:
  contents: write
  issues: write 
  security-events: write

jobs:
  build:
    name: Build Juice Shop
    runs-on: ubuntu-latest

    steps:
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Pull Juice Shop Docker Image
        run: docker pull bkimminich/juice-shop

  security_testing:
    name: Security Testing
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # SAST: CodeQL Security Analysis
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
          queries: security-extended
          config: |
            paths-ignore:
              - 'data/static/codefixes'
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:javascript"
          output: "codeql-results"
      - name: Upload codeQL results as artifact
        uses: actions/upload-artifact@v4
        with: 
          name: codeql-scan-results
          path: codeql-results/*.sarif

      # SCA: Snyk Vulnerability Scanning
      - uses: actions/checkout@master
      - name: Install Dependencies
        run: npm install
      - name: Create sarif-files directory
        run: mkdir -p sarif-files
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif
      - name: Upload snyk results as artifact
        uses: actions/upload-artifact@v4
        with: 
          name: snyk-scan-results
          path: snyk.sarif
          
      # DAST: OWASP ZAP Scan
      - name: Start Juice Shop Container
        run: |
          docker run -d -p 3000:3000 --name juice-shop bkimminich/juice-shop
          # Wait for container to be healthy
          timeout 60 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:3000)" != "200" ]]; do sleep 5; done' || false
      - name: Run OWASP ZAP Scan
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://localhost:3000'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a -d -x zap-results.xml -I'
      - name: Upload zap results as artifact
        uses: actions/upload-artifact@v4
        with: 
          name: zap-scan-results
          path: zap-results.xml

  vulnerability_management:
    name: Vulnerability Management
    needs: security_testing
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Download CodeQL Results
        uses: actions/download-artifact@v4
        with:
          name: codeql-scan-results
          path: scan-results/codeql

      - name: Download Snyk Results
        uses: actions/download-artifact@v4
        with:
          name: snyk-scan-results
          path: scan-results/snyk

      - name: Download ZAP Results
        uses: actions/download-artifact@v4
        with:
          name: zap-scan-results
          path: scan-results/zap

      # Process and combine SARIF files
      - name: Combine SARIF Files
        run: |
          mkdir -p reports
          jq -s '
            reduce .[] as $item ({}; 
              .version = $item.version // "2.1.0" |
              ."$schema" = "http://json.schemastore.org/sarif-2.1.0-rtm.5" |
              .runs += $item.runs
            )
          ' scan-results/snyk/snyk.sarif scan-results/codeql/*.sarif > reports/combined.sarif

      # First scan for ZAP results
      - name: SonarCloud DAST Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.sources=.
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.zaproxy.reportPath=scan-results/zap/zap-results.xml

      # Second scan for SAST/SCA results
      - name: SonarCloud SAST/SCA Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.sources=.
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.sarifReportPaths=reports/combined.sarif

      # List Final Files and Summary
      - name: Scan Results Summary
        if: always()
        run: |
          echo "Scan Results Summary:"
          echo "===================="
          echo "üìä Results uploaded to SonarCloud"
          echo "üîç Quality Gate Status: ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"
          echo "Final Files Structure:"
          ls -R scan-results/
          
  redeploy:
    name: Redeploy Juice Shop
    runs-on: ubuntu-latest
    needs: vulnerability_management
    if: success()

    steps:
      - name: Pull Latest Juice Shop Docker Image
        run: docker pull bkimminich/juice-shop

      - name: Deploy and Verify Juice Shop
        run: |
          docker run -d -p 3000:3000 --name juice-shop bkimminich/juice-shop
          timeout 60 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:3000)" != "200" ]]; do sleep 5; done' || false
